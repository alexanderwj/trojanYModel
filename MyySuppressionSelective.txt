#===================================================================================================
#Simulation setup
#===================================================================================================
timestep<-1
steps<-30
steps3<-20


supress.prob<-0.1
yrs<-10
myys<-c(25, 50, seq(100,1000, 100))
ext.mat<-matrix(data=NA, nrow=length(yrs), ncol=length(myys))

for(x in 1:length(yrs)){
 
steps2<-yrs[x]
total.steps<-steps+steps2+steps3+1
ext.prob<-c()

for(q in 1:length(myys)){

n.myy<-myys[q]

reps<-1000
n.mat<-matrix(data=NA, nrow=reps, ncol=total.steps)
#===================================================================================================
#Population parameters
#===================================================================================================
#stock recruits
alpha<-8.004
beta<-0.008*4.4

#growth
t0<-0
K<-0.336
Linf<-610

#maturity and supression
lm50<-247
lm95<-308

#survival
surv.prop<-.5705134
#===================================================================================================
#Population dynamics functions
#===================================================================================================
age.adv<-function(inds){
inds$age<-inds$age+timestep
inds
} 

grow<-function(inds){
ninds<-length(inds$length)
inds$length<-Linf*(1-exp(-K*inds$age-t0))+rnorm(ninds, 0, 30) 
inds
}

mature<-function(inds){
ninds<-length(inds$length)
li<-inds$length
p<-1/(1+exp(log(19)*(li-lm50)/(lm50-lm95)))
inds$mature<-rbinom(ninds, 1, p)
inds
}

die <- function(inds) {
ninds<-length(inds$length)
inds$status<-ifelse(inds$age==0, 1, rbinom(ninds, 1, surv.prop))
inds<-subset(inds, status==1)
#inds
}

spawn<-function(inds){
spawners<-nrow(subset(inds, mature==1 & sex==1))*2
offspr<-ifelse(spawners==0, 0, round(alpha*spawners*exp(-beta*spawners))+rnorm(1, 0,21))
offspr<-ifelse(offspr<0, 0, offspr)
recruit<-data.frame(age=rep(1, offspr), status=rep(1, offspr), sex=sample(c(1,2), offspr, replace=T), length=Linf*(1-exp(-K*1-t0))+rnorm(offspr, 0, 30), mature=rep(0, offspr))
inds<-rbind(inds, recruit)
inds
}

spawn.myy<-function(inds){
ninds<-length(inds$length)
add.myy<-data.frame(age=rep(1, n.myy), status=rep(1, n.myy), sex=rep(3, n.myy), length=Linf*(1-exp(-K*1-t0)), mature=rep(0, n.myy))
inds<-rbind(inds, add.myy)
inds
ninds<-length(inds$length)
spawners<-nrow(subset(inds, mature==1 & sex==1))*2
offspr<-ifelse(spawners==0, 0, round(alpha*spawners*exp(-beta*spawners))+rnorm(1, 0,21))
offspr<-ifelse(offspr<0, 0, offspr)
n.xy<-nrow(subset(inds, sex==2 & mature==1))
n.yy<-nrow(subset(inds, sex==3 & mature==1))
prob.xy.spawn<-n.xy/(n.xy+n.yy)
prob.yy.spawn<-n.yy/(n.xy+n.yy)
prob.xy.spawn[is.nan(prob.xy.spawn)]<-0
prob.yy.spawn[is.nan(prob.yy.spawn)]<-0
probs<-c((1-(.5*prob.xy.spawn+prob.yy.spawn)),.5*prob.xy.spawn+prob.yy.spawn)
recruit<-data.frame(age=rep(1, offspr), status=rep(1, offspr), sex=sample(c(1,2), offspr, replace=T, prob=probs), length=Linf*(1-exp(-K*1-t0))+rnorm(offspr, 0, 30), mature=rep(0, offspr))
inds<-rbind(inds, recruit)
inds
}



suppress <- function(inds) {
ninds<-length(inds$length)
li<-inds$length
p2<-1-((1/(1+exp(log(19)*(li-lm50)/(lm50-lm95))))*supress.prob)
inds$status<-ifelse(inds$age==0, 1, rbinom(ninds, 1, p2))
inds$status<-ifelse(inds$sex==3, 1, inds$status)
inds$status<-ifelse(inds$sex==4, 1, inds$status)
inds<-subset(inds, status==1)
#inds
}

#===================================================================================================
# Run the simulation
#===================================================================================================

for(rep in 1:reps){
inds<-data.frame(age=rep(4, 100), status=rep(1, 100), sex=rep(c(1,2), each=50), length=Linf*(1-exp(-K*4-t0))+rnorm(100, 0, 30), mature=rep(1, 100))

n<-nrow(subset(inds, sex!=3))
sr<-nrow(subset(inds, sex==1))/nrow(inds)
age2<-mean(inds$age)
offspr2<-nrow(subset(inds, age==2))
sp<-nrow(subset(inds, mature==1 & sex==1))

for(k in 1:steps){
inds<-die(inds)
inds<-spawn(inds)
inds<-age.adv(inds)
inds<-grow(inds)
inds<-mature(inds)

n<-c(n, nrow(subset(inds, sex==1 | sex ==2)))
sr<-c(sr, nrow(subset(inds, sex==1))/nrow(inds))
age2<-c(age2,  mean(inds$age))
offspr2<-c(offspr2, nrow(subset(inds, age==2)))
sp<-c(sp, nrow(subset(inds, mature==1 & sex==1)))
}

#===================================================================================================
#Stock Myy and supress
#===================================================================================================

for(k in 1:steps2){
inds<-die(inds)
inds<-suppress(inds)
inds<-spawn.myy(inds)
inds<-age.adv(inds)
inds<-grow(inds)
inds<-mature(inds)

n<-c(n, nrow(subset(inds, sex==1 | sex ==2)))
sr<-c(sr, nrow(subset(inds, sex==1))/nrow(inds))
age2<-c(age2,  mean(inds$age))
offspr2<-c(offspr2, nrow(subset(inds, age==2)))
sp<-c(sp, nrow(subset(inds, mature==1 & sex==1)))
}

#===================================================================================================
#back to normal population
#===================================================================================================
for(k in 1:steps3){
inds<-die(inds)
inds<-spawn(inds)
inds<-age.adv(inds)
inds<-grow(inds)
inds<-mature(inds)

n<-c(n, nrow(subset(inds, sex==1 | sex ==2)))
sr<-c(sr, nrow(subset(inds, sex==1))/nrow(inds))
age2<-c(age2,  mean(inds$age))
offspr2<-c(offspr2, nrow(subset(inds, age==1)))
sp<-c(sp, nrow(subset(inds, mature==1 & sex==1)))
}
n.mat[rep,]<-n
}


last<-n.mat[,ncol(n.mat)]
ext.prob[q]<-length(last[last==0])/length(last)
}
ext.mat[x,]<-ext.prob
}

par(mfrow=c(3,1))
plot(1:total.steps, n, type='l', xlab='Year', ylab='Total abundance')
abline(v=30, col='red', lty=2)
plot(1:total.steps, sp, type='l', xlab='Year', ylab='Spawner abundance')
abline(v=30, col='red', lty=2)
plot(1:total.steps, sr, type='l', xlab='Year', ylab='Sex ratio')
abline(v=30, col='red', lty=2)
abline(h=0.5)